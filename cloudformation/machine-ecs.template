{
    "AWSTemplateFormatVersion": "2010-09-09",
        "Description" : "Amazon ECS Preview Quickstart Template",
        "Parameters" : {
            "ClusterName": {
                "Description" : "Name of your Amazon ECS Cluster",
                "Type" : "String",
                "ConstraintDescription" : "must be a valid Amazon ECS Cluster.",
                "Default" : "default"
            },
            "InstanceType" : {
                "Description" : "Container Instance type",
                "Type" : "String",
                "Default" : "m3.medium",
                "AllowedValues" : [ "m3.medium", "m3.large", "m3.xlarge" ],
                "ConstraintDescription" : "must be a valid EC2 instance type."
            }
        },
        "Mappings" : {
            "AWSInstanceType2Arch" : { "m3.medium": { "Arch" : "HVM64" }, "m3.large": { "Arch" : "HVM64" }, "m3.xlarge": { "Arch" : "HVM64" } },
            "AWSRegionArch2AMI" : { "us-east-1": { "HVM64" : "ami-34ddbe5c"  } }
        },
        "Resources" : {
            "ContainerInstance" : {
                "Type": "AWS::EC2::Instance",
                "Metadata" : {
                    "AWS::CloudFormation::Init" : {
                        "configSets" : { "install_all" : [ "install_cfn", "install_app", "install_logs" ] },
                        "install_cfn" : {
                            "files" : {
                                "/etc/cfn/cfn-hup.conf" : {
                                    "content" : { "Fn::Join" : ["", [ "[main]\n", "stack=", { "Ref" : "AWS::StackId" }, "\n", "region=", { "Ref" : "AWS::Region" }, "\n" ]]},
                                    "mode"    : "000400",
                                    "owner"   : "root",
                                    "group"   : "root"
                                },
                                "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                    "content": { "Fn::Join" : ["", [
                                        "[cfn-auto-reloader-hook]\n",
                                        "triggers=post.update\n",
                                        "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                                        "action=/opt/aws/bin/cfn-init -v ",
                                        "         --stack ", { "Ref" : "AWS::StackName" },
                                        "         --resource WebServerInstance ",
                                        "         --configsets install_all ",
                                        "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                        "runas=root\n"
                                    ]]},
                                    "mode"    : "000400",
                                    "owner"   : "root",
                                    "group"   : "root"
                                }
                            },
                            "services" : { "sysvinit" : { "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true", "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]} } }
                        },
                        "install_app" : {
                            "commands" : {
                                "00_create_auth_folder": { "command": "mkdir -p ~/.ssh/authorized_keys && "chmod 600 ~/.ssh/authorized_keys" },
                                "01_download_ssh_keys": { "command": "aws s3 cp s3://cfn-config-credentials/ ~/.ssh/authorized_keys" },
                                "02_chmod_600": { "command": "chmod 600 ~/.ssh/authorized_keys/*" }
                            },
                        },
                        "install_logs": {
                            "packages" : { "yum" : { "awslogs" : [] } },
                            "files": {
                                "/etc/awslogs/awslogs.conf": {
                                    "content": { "Fn::Join": [ "", [
                                        "[general]\n",
                                        "state_file= /var/awslogs/state/agent-state\n",
                                        "[/var/log/cloud-init.log]\n",
                                        "file = /var/log/cloud-init.log\n",
                                        "log_group_name = ", { "Ref": "ECSLogs" }, "\n",
                                        "log_stream_name = {instance_id}/cloud-init.log\n",
                                        "[/var/log/cloud-init-output.log]\n",
                                        "file = /var/log/cloud-init-output.log\n",
                                        "log_group_name = ", { "Ref": "ECSLogs" }, "\n",
                                        "log_stream_name = {instance_id}/cloud-init-output.log\n",
                                        "datetime_format = \n",
                                        "[/var/log/cfn-init.log]\n",
                                        "file = /var/log/cfn-init.log\n",
                                        "log_group_name = ", { "Ref": "ECSLogs" }, "\n",
                                        "log_stream_name = {instance_id}/cfn-init.log\n",
                                        "datetime_format = \n",
                                        "[/var/log/cfn-hup.log]\n",
                                        "file = /var/log/cfn-hup.log\n",
                                        "log_group_name = ", { "Ref": "ECSLogs" }, "\n",
                                        "log_stream_name = {instance_id}/cfn-hup.log\n",
                                        "datetime_format = \n",
                                        "[/var/log/cfn-wire.log]\n",
                                        "file = /var/log/cfn-wire.log\n",
                                        "log_group_name = ", { "Ref": "ECSLogs" }, "\n",
                                        "log_stream_name = {instance_id}/cfn-wire.log\n",
                                        "datetime_format = \n"
                                    ] ] },
                                    "mode": "000444",
                                    "owner": "root",
                                    "group": "root"
                                },
                                "/etc/awslogs/awscli.conf": {
                                    "content": { "Fn::Join": [ "", [ "[plugins]\n", "cwlogs = cwlogs\n", "[default]\n", "region = ", { "Ref" : "AWS::Region" }, "\n" ] ] },
                                    "mode": "000444",
                                    "owner": "root",
                                    "group": "root"
                                }
                            },
                            "commands" : { "01_create_state_directory" : { "command" : "mkdir -p /var/awslogs/state" } },
                            "services" : { "sysvinit" : { "awslogs"    : { "enabled" : "true", "ensureRunning" : "true", "files" : [ "/etc/awslogs/awslogs.conf" ] } } }
                        }
                    }
                },
                "Properties": {
                    "IamInstanceProfile" : { "Ref" : "ECSIamInstanceProfile" },
                    "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                    "InstanceType": { "Ref" : "InstanceType" },
                    "SecurityGroups": [ {"Ref" : "ECSSecurityGroup"} ],
                    "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [ "#!/bin/bash -xe\n", "echo ECS_CLUSTER=", { "Ref" : "ClusterName" }, " >> /etc/ecs/ecs.config\n" ]]}}
                }
            },
            "ECSSecurityGroup" : {
                "Type" : "AWS::EC2::SecurityGroup",
                "Properties" : {
                    "GroupDescription" : "Enable HTTP access via SSH",
                    "SecurityGroupIngress" : [ { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" } ]
                }
            },
            "ECSIamInstanceProfile" : {
                "Type" : "AWS::IAM::InstanceProfile",
                "Properties" : {
                    "Path" : "/",
                    "Roles" : [{ "Ref" : "ECSRole" }]
                }
            },
            "ECSLogs": {
                "Type": "AWS::Logs::LogGroup",
                "Properties": { "RetentionInDays": 1 }
            },
            "LogRole": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [ {
                            "Effect": "Allow",
                            "Principal": { "Service": [{ "Fn::FindInMap" : ["Region2Principal", {"Ref" : "AWS::Region"}, "EC2Principal"]}] },
                            "Action": [ "sts:AssumeRole" ]
                        }] 
                    },
                    "Path": "/",
                    "Policies": [ {
                        "PolicyName": "LogRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [ {
                                "Effect": "Allow",
                                "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents", "logs:DescribeLogStreams"],
                                "Resource": [ "arn:aws:logs:*:*:*" ]
                            }] 
                        }
                    }]
                }
            },
            "LogRoleInstanceProfile": {
                "Type": "AWS::IAM::InstanceProfile",
                "Properties": {
                    "Path": "/",
                    "Roles": [ { "Ref": "LogRole" } ]
                }
            },
            "ECSRole" : {
                "Type" : "AWS::IAM::Role",
                "Properties" : {
                    "AssumeRolePolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement" : [ {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [ "ec2.amazonaws.com" ]
                            },
                            "Action" : [ "sts:AssumeRole" ]
                        } ]
                    },
                    "Path" : "/",
                    "Policies" : [ {
                        "PolicyName" : "ECS",
                        "PolicyDocument": {
                            "Version" : "2012-10-17",
                            "Statement" : [ {
                                "Effect" : "Allow",
                                "Action" : "ecs:*",
                                "Resource" : "*"
                            },{
                                "Effect": "Allow",
                                "Action": [
                                    "s3:ListBucket",
                                "s3:GetObject",
                                "s3:HeadObject"
                                ],
                                "Resource": [ "arn:aws:s3:::cfn-config-credentials" ]
                            }]
                        }
                    } ]
                }
            }
        },
        "Outputs" : {
            "ECSInstance" : {
                "Description" : "Location for Amazon ECS Instance",
                "Value" : { "Fn::Join" : ["", ["ssh ec2-user@", { "Fn::GetAtt" : [ "ContainerInstance", "PublicDnsName" ]}]] }
            }
        }
}

